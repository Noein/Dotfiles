From 2da8f5ebf90ca82868ed455b8704f9c37bcdc0ba Mon Sep 17 00:00:00 2001
From: Vladislav Mileshkin <noein93@gmail.com>
Date: Thu, 27 Jun 2013 22:35:11 +0400
Subject: [PATCH] Add QtHelp module

---
 CMakeLists.txt                    |  2 +-
 modules/CMakeLists.txt            |  1 +
 modules/qthelp/CMakeLists.txt     | 22 +++++++++++++
 modules/qthelp/qthelp.cpp         | 69 +++++++++++++++++++++++++++++++++++++++
 modules/qthelp/qthelphandlers.cpp | 42 ++++++++++++++++++++++++
 5 files changed, 135 insertions(+), 1 deletion(-)
 create mode 100644 modules/qthelp/CMakeLists.txt
 create mode 100644 modules/qthelp/qthelp.cpp
 create mode 100644 modules/qthelp/qthelphandlers.cpp

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a02672f..86b4411 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -4,7 +4,7 @@ set(COMPILE_RUBY FALSE CACHE INTERNAL "")
 
 find_package(Ruby REQUIRED)
 find_package(Qt4 REQUIRED)
-find_package(Smoke COMPONENTS QtCore QtGui QtXml QtOpenGl QtSql QtNetwork QtDbus QtSvg Phonon QSci QtDeclarative QtScript QtWebkit QtUiTools QtTest Qwt)
+find_package(Smoke COMPONENTS QtCore QtGui QtXml QtOpenGl QtSql QtNetwork QtDbus QtSvg Phonon QSci QtDeclarative QtScript QtWebkit QtUiTools QtTest Qwt QtHelp)
 include_directories(
     ${SMOKE_INCLUDE_DIR}
 #    ${CMAKE_CURRENT_SOURCE_DIR}/src
diff --git a/modules/CMakeLists.txt b/modules/CMakeLists.txt
index 0390da8..90acc1d 100644
--- a/modules/CMakeLists.txt
+++ b/modules/CMakeLists.txt
@@ -12,5 +12,6 @@ add_subdirectory(qtuitools)
 add_subdirectory(qtwebkit)
 add_subdirectory(qtxml)
 add_subdirectory(qtxmlpatterns)
+add_subdirectory(qthelp)
 
 message(STATUS "Build QtRuby... " ${QTRUBY_ENABLED})
diff --git a/modules/qthelp/CMakeLists.txt b/modules/qthelp/CMakeLists.txt
new file mode 100644
index 0000000..bec14d5
--- /dev/null
+++ b/modules/qthelp/CMakeLists.txt
@@ -0,0 +1,22 @@
+include_directories(
+    ${CMAKE_SOURCE_DIR}/src
+    ${QT_INCLUDES}
+    ${RUBY_INCLUDE_DIRS}
+    ${SMOKE_INCLUDE_DIR}
+)
+
+set(rubyqthelp_LIBRARY_SRC qthelp.cpp qthelphandlers.cpp)
+add_library(rubyqthelp MODULE ${rubyqthelp_LIBRARY_SRC})
+target_link_libraries(rubyqthelp
+                            ${QT_QTCORE_LIBRARY}
+                            ${QT_QTSQL_LIBRARY}
+                            ${SMOKE_QTSQL_LIBRARY}
+                            smokeqthelp
+                            qtrubyruntime
+)
+set_target_properties(rubyqthelp PROPERTIES PREFIX "" OUTPUT_NAME qthelp)
+install(TARGETS rubyqthelp DESTINATION ${CUSTOM_RUBY_SITE_ARCH_DIR})
+
+if (Q_WS_MAC)
+    install(CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink \"${CUSTOM_RUBY_SITE_ARCH_DIR}/qthelp.so\"  \"${CUSTOM_RUBY_SITE_ARCH_DIR}/qthelp.bundle\" )" )
+endif (Q_WS_MAC)
diff --git a/modules/qthelp/qthelp.cpp b/modules/qthelp/qthelp.cpp
new file mode 100644
index 0000000..750afb4
--- /dev/null
+++ b/modules/qthelp/qthelp.cpp
@@ -0,0 +1,69 @@
+/*
+ *   Copyright 2009 by Richard Dale <richard.j.dale@gmail.com>
+
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Library General Public License as
+ *   published by the Free Software Foundation; either version 2, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details
+ *
+ *   You should have received a copy of the GNU Library General Public
+ *   License along with this program; if not, write to the
+ *   Free Software Foundation, Inc.,
+ *   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include <QtScript/QScriptValue>
+#include <QtScript/QScriptEngine>
+
+#include <global.h>
+#include <marshall.h>
+
+#include <smoke/qthelp_smoke.h>
+
+namespace QtRuby {
+extern Marshall::TypeHandler QtHelpHandlers[];
+extern void registerQtHelpTypes();
+
+static void initializeClasses(Smoke * smoke)
+{
+    for (int i = 1; i <= smoke->numClasses; i++) {
+        Smoke::ModuleIndex classId(smoke, i);
+        QString className = QString::fromLatin1(smoke->classes[i].className);
+
+        if (    smoke->classes[i].external
+                || className.contains("Internal")
+                || className == "Qt" )
+        {
+            continue;
+        }
+
+        if (className.startsWith("Q"))
+            className = className.mid(1).prepend("Qt::");
+
+        VALUE klass = Global::initializeClass(classId, className);
+    }
+}
+
+}
+
+extern "C" {
+
+Q_DECL_EXPORT void
+Init_qthelp()
+{
+    init_qthelp_Smoke();
+    QtRuby::Module qthelp_module = { "qthelp", new QtRuby::Binding(qthelp_Smoke) };
+    QtRuby::Global::modules[qthelp_Smoke] = qthelp_module;
+    QtRuby::registerQtHelpTypes();
+    QtRuby::Marshall::installHandlers(QtRuby::QtHelpHandlers);
+    QtRuby::initializeClasses(qthelp_Smoke);
+
+    return;
+}
+
+}
diff --git a/modules/qthelp/qthelphandlers.cpp b/modules/qthelp/qthelphandlers.cpp
new file mode 100644
index 0000000..325f9a4
--- /dev/null
+++ b/modules/qthelp/qthelphandlers.cpp
@@ -0,0 +1,42 @@
+/*
+ *   Copyright 2009 by Richard Dale <richard.j.dale@gmail.com>
+
+ *   Based on the PerlQt marshalling code by Ashley Winters
+
+ *   This program is free software; you can redistribute it and/or modify
+ *   it under the terms of the GNU Library General Public License as
+ *   published by the Free Software Foundation; either version 2, or
+ *   (at your option) any later version.
+ *
+ *   This program is distributed in the hope that it will be useful,
+ *   but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *   GNU General Public License for more details
+ *
+ *   You should have received a copy of the GNU Library General Public
+ *   License along with this program; if not, write to the
+ *   Free Software Foundation, Inc.,
+ *   51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include "marshall.h"
+#include "global.h"
+#include "rubymetatype.h"
+
+namespace QtRuby {
+
+
+Marshall::TypeHandler QtHelpHandlers[] = {
+
+    { 0, 0 }
+};
+
+void registerQtHelpTypes()
+{
+
+    return;
+}
+
+}
+
+// kate: space-indent on; indent-width 4; replace-tabs on; mixed-indent off;
-- 
1.8.2.1

